import{_ as s,c as a,a as e,o as t}from"./app-MggqbO8J.js";const i={};function l(p,n){return t(),a("div",null,n[0]||(n[0]=[e(`<h1 id="navigation" tabindex="-1"><a class="header-anchor" href="#navigation"><span>Navigation</span></a></h1><h2 id="routes-definition" tabindex="-1"><a class="header-anchor" href="#routes-definition"><span>Routes : definition</span></a></h2><ul><li>What are routes and their significance.</li><li>Benefits of using routes for navigation.</li><li>Basic structure of routes in a Flutter app.</li></ul><p>Routes are a fundamental concept in Flutter app navigation. In this lesson, you&#39;ll understand what routes are and why they are crucial for creating a structured navigation flow in your app. You&#39;ll explore the basic structure of routes and their components.</p><h2 id="declaring-routes" tabindex="-1"><a class="header-anchor" href="#declaring-routes"><span>Declaring Routes</span></a></h2><ul><li>Declaring routes in the MaterialApp widget.</li><li>Associating routes with route names and widgets.</li><li>Navigating between different routes.</li></ul><p>To navigate between different screens in your app, you need to declare and define routes. This lesson covers the process of declaring routes in the MaterialApp widget, associating routes with route names and widgets, and implementing navigation between routes.</p><ul><li>Using named routes for navigation.</li><li>Passing data and parameters to named routes.</li><li>Handling route transitions and animations.</li></ul><p>Named routes offer a structured way to navigate between screens in Flutter. This lesson guides you through using named routes for navigation, passing data and parameters to named routes, and customizing route transitions and animations.</p><div class="language-dart line-numbers-mode" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line"></span>
<span class="line"><span class="token metadata function">@override</span></span>
<span class="line">  <span class="token class-name">Widget</span> <span class="token function">build</span><span class="token punctuation">(</span><span class="token class-name">BuildContext</span> context<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">return</span> <span class="token class-name">MaterialApp</span><span class="token punctuation">(</span></span>
<span class="line">    initialRoute<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&#39;/&#39;</span></span><span class="token punctuation">,</span></span>
<span class="line">    routes<span class="token punctuation">:</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token string-literal"><span class="token string">&#39;/&#39;</span></span><span class="token punctuation">:</span> <span class="token punctuation">(</span>context<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token class-name">HomeScreen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token string-literal"><span class="token string">&#39;/details&#39;</span></span><span class="token punctuation">:</span> <span class="token punctuation">(</span>context<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token class-name">DetailScreen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="navigate-between-screens" tabindex="-1"><a class="header-anchor" href="#navigate-between-screens"><span>Navigate between screens</span></a></h2><div class="language-dart line-numbers-mode" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line">onPressed<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// Navigate to the second screen using a named route.</span></span>
<span class="line">  <span class="token class-name">Navigator</span><span class="token punctuation">.</span><span class="token function">pushNamed</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">&#39;/details&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="transmitting-data" tabindex="-1"><a class="header-anchor" href="#transmitting-data"><span>Transmitting Data</span></a></h2><ul><li>Using route parameters for data transmission.</li><li>Strategies for complex data sharing between screens.</li><li>Data validation and error handling.</li></ul><p>Passing data between routes is a common requirement in app development. This lesson covers the use of route parameters for data transmission, strategies for handling complex data sharing between screens, and best practices for data validation and error handling.</p><p>Create a screen argument class</p><div class="language-dart line-numbers-mode" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line"><span class="token keyword">class</span> <span class="token class-name">ScreenArguments</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">final</span> <span class="token class-name">String</span> title<span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">final</span> <span class="token class-name">String</span> message<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token class-name">ScreenArguments</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>title<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Prepare the widget for taking argument param</p><div class="language-dart line-numbers-mode" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line"><span class="token comment">// A Widget that extracts the necessary arguments from</span></span>
<span class="line"><span class="token comment">// the ModalRoute.</span></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name">ExtractArgumentsScreen</span> <span class="token keyword">extends</span> <span class="token class-name">StatelessWidget</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">const</span> <span class="token class-name">ExtractArgumentsScreen</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token keyword">super</span><span class="token punctuation">.</span>key<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">static</span> <span class="token keyword">const</span> routeName <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&#39;/extractArguments&#39;</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token metadata function">@override</span></span>
<span class="line">  <span class="token class-name">Widget</span> <span class="token function">build</span><span class="token punctuation">(</span><span class="token class-name">BuildContext</span> context<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// Extract the arguments from the current ModalRoute</span></span>
<span class="line">    <span class="token comment">// settings and cast them as ScreenArguments.</span></span>
<span class="line">    <span class="token keyword">final</span> args <span class="token operator">=</span> <span class="token class-name">ModalRoute</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token operator">!</span><span class="token punctuation">.</span>settings<span class="token punctuation">.</span>arguments <span class="token operator">as</span> <span class="token class-name">ScreenArguments</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">return</span> <span class="token class-name">Scaffold</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Create the route</p><div class="language-dart line-numbers-mode" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line"><span class="token class-name">MaterialApp</span><span class="token punctuation">(</span></span>
<span class="line">  routes<span class="token punctuation">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token class-name">ExtractArgumentsScreen</span><span class="token punctuation">.</span>routeName<span class="token punctuation">:</span> <span class="token punctuation">(</span>context<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span></span>
<span class="line">        <span class="token keyword">const</span> <span class="token class-name">ExtractArgumentsScreen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Use it</p><div class="language-dart line-numbers-mode" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line">onPressed<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// When the user taps the button,</span></span>
<span class="line">    <span class="token comment">// navigate to a named route and</span></span>
<span class="line">    <span class="token comment">// provide the arguments as an optional</span></span>
<span class="line">    <span class="token comment">// parameter.</span></span>
<span class="line">    <span class="token class-name">Navigator</span><span class="token punctuation">.</span><span class="token function">pushNamed</span><span class="token punctuation">(</span></span>
<span class="line">      context<span class="token punctuation">,</span></span>
<span class="line">      <span class="token class-name">ExtractArgumentsScreen</span><span class="token punctuation">.</span>routeName<span class="token punctuation">,</span></span>
<span class="line">      arguments<span class="token punctuation">:</span> <span class="token class-name">ScreenArguments</span><span class="token punctuation">(</span></span>
<span class="line">        <span class="token string-literal"><span class="token string">&#39;Extract Arguments Screen&#39;</span></span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token string-literal"><span class="token string">&#39;This message is extracted in the build method.&#39;</span></span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="state-management-for-routes" tabindex="-1"><a class="header-anchor" href="#state-management-for-routes"><span>State Management for Routes</span></a></h2><ul><li>Sharing and managing state across routes.</li><li>ScopedModel, Provider, and other state management solutions.</li><li>Preventing data loss and maintaining UI consistency.</li></ul><p>Effective state management between routes is essential for maintaining a consistent user experience. This lesson covers techniques for sharing and managing state across routes using solutions like ScopedModel, Provider, and more. You&#39;ll learn how to prevent data loss and ensure UI consistency.</p><h2 id="🧪-exercices" tabindex="-1"><a class="header-anchor" href="#🧪-exercices"><span>🧪 Exercices</span></a></h2><p>Add navigation to the Quiz Application.</p><h2 id="🎯-solutions" tabindex="-1"><a class="header-anchor" href="#🎯-solutions"><span>🎯 Solutions</span></a></h2><details class="hint-container details"><summary>Solution</summary><p><a href="https://github.com/gbrah/learning-src-2023-flutter" target="_blank" rel="noopener noreferrer">Github repository sources</a></p></details><h2 id="📖-further-reading" tabindex="-1"><a class="header-anchor" href="#📖-further-reading"><span>📖 Further reading</span></a></h2><ul><li><a href="https://docs.flutter.dev/ui/navigation" target="_blank" rel="noopener noreferrer">Navigation</a></li><li><a href="https://docs.flutter.dev/cookbook/navigation/navigate-with-arguments" target="_blank" rel="noopener noreferrer">Pass Arguments with navigation</a></li></ul>`,32)]))}const c=s(i,[["render",l],["__file","index.html.vue"]]),r=JSON.parse('{"path":"/nav/","title":"Navigation","lang":"en-US","frontmatter":{"description":"Navigation Routes : definition What are routes and their significance. Benefits of using routes for navigation. Basic structure of routes in a Flutter app. Routes are a fundamen...","head":[["meta",{"property":"og:url","content":"https://worldline.github.io/gbrah/learning-2023-flutter/learning-2023-flutter/nav/"}],["meta",{"property":"og:title","content":"Navigation"}],["meta",{"property":"og:description","content":"Navigation Routes : definition What are routes and their significance. Benefits of using routes for navigation. Basic structure of routes in a Flutter app. Routes are a fundamen..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-12-02T13:28:58.000Z"}],["meta",{"property":"article:modified_time","content":"2024-12-02T13:28:58.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Navigation\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-12-02T13:28:58.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"Routes : definition","slug":"routes-definition","link":"#routes-definition","children":[]},{"level":2,"title":"Declaring Routes","slug":"declaring-routes","link":"#declaring-routes","children":[]},{"level":2,"title":"Navigate between screens","slug":"navigate-between-screens","link":"#navigate-between-screens","children":[]},{"level":2,"title":"Transmitting Data","slug":"transmitting-data","link":"#transmitting-data","children":[]},{"level":2,"title":"State Management for Routes","slug":"state-management-for-routes","link":"#state-management-for-routes","children":[]},{"level":2,"title":"🧪 Exercices","slug":"🧪-exercices","link":"#🧪-exercices","children":[]},{"level":2,"title":"🎯 Solutions","slug":"🎯-solutions","link":"#🎯-solutions","children":[]},{"level":2,"title":"📖 Further reading","slug":"📖-further-reading","link":"#📖-further-reading","children":[]}],"git":{"updatedTime":1733146138000,"contributors":[{"name":"Brah","email":"brah.gharbi@gmail.com","commits":4,"url":"https://github.com/Brah"},{"name":"A187839","email":"ibrahim.gharbi@worldline.com","commits":4,"url":"https://github.com/A187839"}]},"filePathRelative":"nav/README.md","autoDesc":true}');export{c as comp,r as data};
