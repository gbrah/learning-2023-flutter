import{_ as s,c as a,a as e,o as t}from"./app-MggqbO8J.js";const i={};function l(r,n){return t(),a("div",null,n[0]||(n[0]=[e(`<h1 id="async-network" tabindex="-1"><a class="header-anchor" href="#async-network"><span>Async &amp; Network</span></a></h1><h2 id="managing-asynchronous-programming" tabindex="-1"><a class="header-anchor" href="#managing-asynchronous-programming"><span>Managing Asynchronous Programming</span></a></h2><p>Grasp the fundamentals of asynchronous programming in Flutter.</p><ul><li>Introducing Futures and their role.</li><li>Working with asynchronous operations.</li></ul><p>In the world of modern app development, asynchronous programming is crucial for responsive and non-blocking applications. This lesson introduces you to the concept of asynchronous programming, explains the need for it, and dives into Futures as the core mechanism for handling asynchronous operations.</p><h3 id="futures-and-futurebuilder" tabindex="-1"><a class="header-anchor" href="#futures-and-futurebuilder"><span>Futures and FutureBuilder</span></a></h3><ul><li>In-depth understanding of Futures.</li><li>Practical usage of the FutureBuilder widget.</li><li>Building asynchronous workflows with Futures.</li></ul><p>Futures play a vital role in managing asynchronous tasks in Flutter. This lesson provides a comprehensive understanding of Futures, and you&#39;ll explore their practical application using the FutureBuilder widget. You&#39;ll learn to build asynchronous workflows and handle data loading and processing.</p><h3 id="streams-and-streambuilder" tabindex="-1"><a class="header-anchor" href="#streams-and-streambuilder"><span>Streams and StreamBuilder</span></a></h3><ul><li>Introduction to Streams and their use cases.</li><li>Practical application of the StreamBuilder widget.</li><li>Real-world examples of using Streams for event-driven apps.</li></ul><p>Streams are essential for handling event-driven asynchronous tasks in Flutter. You&#39;ll learn what Streams are and when to use them. The practical application of Streams will be demonstrated using the StreamBuilder widget. Real-world examples will showcase how Streams are used for reactive and real-time applications.</p><h2 id="connect-my-quizz-to-the-internet" tabindex="-1"><a class="header-anchor" href="#connect-my-quizz-to-the-internet"><span>Connect my Quizz to the internet</span></a></h2><p>For now, we will request a simple plain text json file hosted on this repo that will simulate a REST API call to be able to use our Ktor client.</p><p>The request &amp; answers details are specified below :</p><details class="hint-container details"><summary>Request</summary><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">POST</span>
<span class="line">content-type: text/plain  </span>
<span class="line">url: https://github.com/worldline/learning-kotlin-multiplatform/raw/main/quiz.json</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><details class="hint-container details"><summary>Answer</summary><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">code:200</span>
<span class="line">body: </span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token string">&quot;questions&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">[</span></span>
<span class="line">    <span class="token punctuation">{</span> </span>
<span class="line">    <span class="token string">&quot;id&quot;</span>:1, </span>
<span class="line">    <span class="token string">&quot;label&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;You can create an emulator to simulate the configuration of a particular type of Android device using a tool like&quot;</span>, </span>
<span class="line">    <span class="token string">&quot;correct_answer_id&quot;</span>:3, </span>
<span class="line">    <span class="token string">&quot;answers&quot;</span>:<span class="token punctuation">[</span></span>
<span class="line">      <span class="token punctuation">{</span><span class="token string">&quot;id&quot;</span>:1, <span class="token string">&quot;label&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;Theme Editor&quot;</span><span class="token punctuation">}</span>,</span>
<span class="line">      <span class="token punctuation">{</span><span class="token string">&quot;id&quot;</span>:2, <span class="token string">&quot;label&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;Android SDK Manager&quot;</span><span class="token punctuation">}</span>,</span>
<span class="line">      <span class="token punctuation">{</span><span class="token string">&quot;id&quot;</span>:3, <span class="token string">&quot;label&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;AVD Manager&quot;</span><span class="token punctuation">}</span>,</span>
<span class="line">      <span class="token punctuation">{</span><span class="token string">&quot;id&quot;</span>:4, <span class="token string">&quot;label&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;Virtual Editor&quot;</span><span class="token punctuation">}</span></span>
<span class="line">     <span class="token punctuation">]</span></span>
<span class="line">    <span class="token punctuation">}</span>,</span>
<span class="line">    <span class="token punctuation">{</span></span>
<span class="line">    <span class="token string">&quot;id&quot;</span>:2, </span>
<span class="line">    <span class="token string">&quot;label&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;What parameter specifies the Android API level that Gradle should use to compile your app?&quot;</span>, </span>
<span class="line">    <span class="token string">&quot;correct_answer_id&quot;</span>:2, </span>
<span class="line">    <span class="token string">&quot;answers&quot;</span>:<span class="token punctuation">[</span></span>
<span class="line">      <span class="token punctuation">{</span><span class="token string">&quot;id&quot;</span>:1, <span class="token string">&quot;label&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;minSdkVersion&quot;</span><span class="token punctuation">}</span>,</span>
<span class="line">      <span class="token punctuation">{</span><span class="token string">&quot;id&quot;</span>:2, <span class="token string">&quot;label&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;compileSdkVersion&quot;</span><span class="token punctuation">}</span>,</span>
<span class="line">      <span class="token punctuation">{</span><span class="token string">&quot;id&quot;</span>:3, <span class="token string">&quot;label&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;targetSdkVersion&quot;</span><span class="token punctuation">}</span>,</span>
<span class="line">      <span class="token punctuation">{</span><span class="token string">&quot;id&quot;</span>:4, <span class="token string">&quot;label&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;testSdkVersion&quot;</span><span class="token punctuation">}</span></span>
<span class="line">     <span class="token punctuation">]</span></span>
<span class="line">    <span class="token punctuation">}</span>,</span>
<span class="line">  <span class="token punctuation">]</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h2 id="making-http-requests-on-restful-apis" tabindex="-1"><a class="header-anchor" href="#making-http-requests-on-restful-apis"><span>Making HTTP Requests on RESTful APIs</span></a></h2><p>Learn how to make HTTP requests to RESTful APIs in Flutter.</p><ul><li>The importance of communicating with APIs.</li><li>Using the HTTP package in Flutter.</li><li>Making GET, POST, and other types of requests.</li></ul><p>This lesson explains the importance of API communication and demonstrates how to make HTTP requests in Flutter using the HTTP package. You&#39;ll learn to perform common request types such as GET and POST.</p><ul><li>Parsing JSON data from API responses.</li><li>Error handling for network requests.</li><li>Storing and managing data obtained from APIs.</li></ul><p>Obtaining data from APIs is just the first step. This lesson guides you through the process of parsing JSON data from API responses and handling errors that might occur during network requests. You&#39;ll also learn how to store and manage data obtained from APIs efficiently.</p><h4 id="add-the-http-library" tabindex="-1"><a class="header-anchor" href="#add-the-http-library"><span>add the http library</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">flutter pub <span class="token function">add</span> http</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="import-http-request-on-your-dart-file" tabindex="-1"><a class="header-anchor" href="#import-http-request-on-your-dart-file"><span>import http request on your dart file</span></a></h4><div class="language-dart line-numbers-mode" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token string-literal"><span class="token string">&#39;package:http/http.dart&#39;</span></span> <span class="token operator">as</span> http<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="add-the-android-permission" tabindex="-1"><a class="header-anchor" href="#add-the-android-permission"><span>add the android permission</span></a></h4><div class="language-xml line-numbers-mode" data-highlighter="prismjs" data-ext="xml" data-title="xml"><pre><code><span class="line"><span class="token comment">&lt;!-- Required to fetch data from the internet. --&gt;</span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>uses-permission</span> <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>android.permission.INTERNET<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="🧪-exercices" tabindex="-1"><a class="header-anchor" href="#🧪-exercices"><span>🧪 Exercices</span></a></h2><p>Retrieve the previous Quiz data and create a widget statefull with future builder to show a list of questions retrieved from internet.</p><h2 id="🎯-solutions" tabindex="-1"><a class="header-anchor" href="#🎯-solutions"><span>🎯 Solutions</span></a></h2><details class="hint-container details"><summary>Solutions</summary><p><a href="https://zapp.run/edit/quiz-z9q06jl9r06" target="_blank" rel="noopener noreferrer">Zapp.run project with http request</a></p></details><h2 id="📖-further-reading" tabindex="-1"><a class="header-anchor" href="#📖-further-reading"><span>📖 Further reading</span></a></h2><ul><li><a href="https://docs.flutter.dev/cookbook/networking/fetch-data" target="_blank" rel="noopener noreferrer">Fetch DATA from Internet</a></li><li><a href="https://medium.com/@bobbykboseoffice/json-parsing-using-dio-in-flutter-9c870d3d1759" target="_blank" rel="noopener noreferrer">Json parsing with DIO</a></li></ul>`,34)]))}const p=s(i,[["render",l],["__file","index.html.vue"]]),u=JSON.parse('{"path":"/net/","title":"Async  & Network","lang":"en-US","frontmatter":{"description":"Async & Network Managing Asynchronous Programming Grasp the fundamentals of asynchronous programming in Flutter. Introducing Futures and their role. Working with asynchronous op...","head":[["meta",{"property":"og:url","content":"https://worldline.github.io/gbrah/learning-2023-flutter/learning-2023-flutter/net/"}],["meta",{"property":"og:title","content":"Async  & Network"}],["meta",{"property":"og:description","content":"Async & Network Managing Asynchronous Programming Grasp the fundamentals of asynchronous programming in Flutter. Introducing Futures and their role. Working with asynchronous op..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-12-02T13:28:58.000Z"}],["meta",{"property":"article:modified_time","content":"2024-12-02T13:28:58.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Async  & Network\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-12-02T13:28:58.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"Managing Asynchronous Programming","slug":"managing-asynchronous-programming","link":"#managing-asynchronous-programming","children":[{"level":3,"title":"Futures and FutureBuilder","slug":"futures-and-futurebuilder","link":"#futures-and-futurebuilder","children":[]},{"level":3,"title":"Streams and StreamBuilder","slug":"streams-and-streambuilder","link":"#streams-and-streambuilder","children":[]}]},{"level":2,"title":"Connect my Quizz to the internet","slug":"connect-my-quizz-to-the-internet","link":"#connect-my-quizz-to-the-internet","children":[]},{"level":2,"title":"Making HTTP Requests on RESTful APIs","slug":"making-http-requests-on-restful-apis","link":"#making-http-requests-on-restful-apis","children":[]},{"level":2,"title":"🧪 Exercices","slug":"🧪-exercices","link":"#🧪-exercices","children":[]},{"level":2,"title":"🎯 Solutions","slug":"🎯-solutions","link":"#🎯-solutions","children":[]},{"level":2,"title":"📖 Further reading","slug":"📖-further-reading","link":"#📖-further-reading","children":[]}],"git":{"updatedTime":1733146138000,"contributors":[{"name":"Brah","email":"brah.gharbi@gmail.com","commits":2,"url":"https://github.com/Brah"},{"name":"A187839","email":"ibrahim.gharbi@worldline.com","commits":3,"url":"https://github.com/A187839"}]},"filePathRelative":"net/README.md","autoDesc":true}');export{p as comp,u as data};
